---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lihangyu.
--- DateTime: 2021/8/18 19:41
---

local CutsceneTimelineMgr = Polaris.Cutscene.CutsceneTimelineMgr
local instance = CutsceneTimelineMgr

function CutsceneTimelineMgr.Init()
    instance.duration = 0
    instance.playEndTime = 0
    instance.playableDirector = nil
    instance.timelineGO = nil
    instance.hasAddTimeUpdateFunc = false
    instance.playFinishCallback = nil
    instance.playableExtParams = {}
    instance.timelinePlayCallbackFunc = {}
    instance.waitInteractiveSep = nil
end

function CutsceneTimelineMgr.Dispose()
    BN.Cutscene.CutsceneTimelineUtilities.RemoveTrackFromBindDict()
    if not goutil.IsNil(instance.timelineGO) then
        UnityEngine.Object.Destroy(instance.timelineGO)
    end
    instance.timelineGO = nil
    instance.playableDirector = nil
    instance.duration = 0
    instance.playEndTime = 0
    instance.playFinishCallback = nil
    instance.playablePlayUtil = nil
    instance.playableExtParams = {}
    instance.timelinePlayCallbackFunc = {}
    instance.waitInteractiveSep = nil

    instance.EndTimeUpdate()
    BN.Cutscene.CutsceneCinemachineMgr.DisposeTemp()
    BN.Cutscene.CutsSceneEffGroupMgr.Dispose()
end

---@desc 获取timeline的PlayableDirector组件对象
---@return UnityEngine.Playables.PlayableDirector
function CutsceneTimelineMgr.GetPlayableDirector()
    if Polaris.Cutscene.CutsceneUtil.CheckIsInEditorNotRunTime() then
        local timelineGO = GameObject.Find("CutsceneTimelineMgr")
        if not timelineGO then
            timelineGO = GameObject.New('CutsceneTimelineMgr')
        end
        local playableDirector = timelineGO:GetOrAddComponent(typeof(UnityEngine.Playables.PlayableDirector))
        return playableDirector
    end

    if not goutil.IsNil(instance.playableDirector) then
        return instance.playableDirector
    end

    local timelineGO = instance._GetTimelineGO()
    instance.playableDirector = timelineGO:AddComponent(typeof(UnityEngine.Playables.PlayableDirector))
    instance.playableDirector.playOnAwake = false
    return instance.playableDirector
end

---@desc 获取档期已加载的timeline序列化资源
---@return UnityEngine.Timeline.TimelineAsset
function CutsceneTimelineMgr.GetCurTimelineAsset()
    return BN.Cutscene.ResMgr.GetCurTimelineAsset()
end

---@desc 判断当前是否是编辑器模式
---@return boolean
function CutsceneTimelineMgr.IsEditorMode()
    return (BN.Cutscene.CutsceneEditorMgr.CheckIsRunTimeEditorMode() or BN.Cutscene.CutsceneUtil.CheckIsInEditorNotRunTime())
end

---@desc 判断是否需要等待扩展结束
function CutsceneTimelineMgr.CheckNeedWaitExtEnd()
    return BN.Cutscene.CutsceneMgr.CheckNeedWaitExtEnd()
end

---@desc 执行timeline绑定操作
function CutsceneTimelineMgr.SetTimelineBinding()
    instance.StopTimeline()

    instance.RefreshDirectorTimelineAsset()
    local playableDirector = instance.GetPlayableDirector()
    instance.playableBinder:SetDirector(playableDirector)
    instance.SetDirectorGenericBinding()
end

---@desc 执行Director绑定操作
function CutsceneTimelineMgr.SetDirectorGenericBinding()
    instance.ClearDirectorGenericBinding()
    BN.Cutscene.CutsceneTimelineUtilities.SetGenericBinding(instance.GetPlayableDirector())
    BN.Cutscene.CutsceneCinemachineMgr.RefreshCVMBinding(instance.GetPlayableDirector())
    BN.Cutscene.CutsSceneEffGroupMgr.RefreshSceneEffGroupBinding(instance.GetPlayableDirector())
end

---@desc 清除Director绑定
function CutsceneTimelineMgr.ClearDirectorGenericBinding()
    local playableDirector = instance.GetPlayableDirector()
    BN.Cutscene.CutsceneTimelineUtilities.ClearGenericBinding(playableDirector)
end