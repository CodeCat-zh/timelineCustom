//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Cutscene_CommonPlayableBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Cutscene.CommonPlayableBehaviour), typeof(UnityEngine.Playables.PlayableBehaviour));
		L.RegFunction("OnBehaviourPlay", OnBehaviourPlay);
		L.RegFunction("OnBehaviourPause", OnBehaviourPause);
		L.RegFunction("PrepareFrame", PrepareFrame);
		L.RegFunction("ProcessFrame", ProcessFrame);
		L.RegFunction("New", _CreateCutscene_CommonPlayableBehaviour);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("behaviourPlayCallBack", get_behaviourPlayCallBack, set_behaviourPlayCallBack);
		L.RegVar("behaviourPauseCallBack", get_behaviourPauseCallBack, set_behaviourPauseCallBack);
		L.RegVar("prepareFrameCallBack", get_prepareFrameCallBack, set_prepareFrameCallBack);
		L.RegVar("processFrameCallBack", get_processFrameCallBack, set_processFrameCallBack);
		L.RegVar("parmaList", get_parmaList, set_parmaList);
		L.RegVar("id", get_id, set_id);
		L.RegVar("type", get_type, set_type);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCutscene_CommonPlayableBehaviour(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Cutscene.CommonPlayableBehaviour obj = new Cutscene.CommonPlayableBehaviour();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Cutscene.CommonPlayableBehaviour.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviourPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)ToLua.CheckObject<Cutscene.CommonPlayableBehaviour>(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 2);
			UnityEngine.Playables.FrameData arg1 = StackTraits<UnityEngine.Playables.FrameData>.Check(L, 3);
			obj.OnBehaviourPlay(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviourPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)ToLua.CheckObject<Cutscene.CommonPlayableBehaviour>(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 2);
			UnityEngine.Playables.FrameData arg1 = StackTraits<UnityEngine.Playables.FrameData>.Check(L, 3);
			obj.OnBehaviourPause(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PrepareFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)ToLua.CheckObject<Cutscene.CommonPlayableBehaviour>(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 2);
			UnityEngine.Playables.FrameData arg1 = StackTraits<UnityEngine.Playables.FrameData>.Check(L, 3);
			obj.PrepareFrame(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ProcessFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)ToLua.CheckObject<Cutscene.CommonPlayableBehaviour>(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 2);
			UnityEngine.Playables.FrameData arg1 = StackTraits<UnityEngine.Playables.FrameData>.Check(L, 3);
			object arg2 = ToLua.ToVarObject(L, 4);
			obj.ProcessFrame(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_behaviourPlayCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack ret = obj.behaviourPlayCallBack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviourPlayCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_behaviourPauseCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack ret = obj.behaviourPauseCallBack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviourPauseCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prepareFrameCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack ret = obj.prepareFrameCallBack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prepareFrameCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_processFrameCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack ret = obj.processFrameCallBack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index processFrameCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_parmaList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			System.Collections.Generic.List<string> ret = obj.parmaList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parmaList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			int ret = obj.id;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_type(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			string ret = obj.type;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index type on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_behaviourPlayCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack arg0 = (LuaFunctionCallBack)ToLua.CheckObject<LuaFunctionCallBack>(L, 2);
			obj.behaviourPlayCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviourPlayCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_behaviourPauseCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack arg0 = (LuaFunctionCallBack)ToLua.CheckObject<LuaFunctionCallBack>(L, 2);
			obj.behaviourPauseCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviourPauseCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prepareFrameCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack arg0 = (LuaFunctionCallBack)ToLua.CheckObject<LuaFunctionCallBack>(L, 2);
			obj.prepareFrameCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prepareFrameCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_processFrameCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			LuaFunctionCallBack arg0 = (LuaFunctionCallBack)ToLua.CheckObject<LuaFunctionCallBack>(L, 2);
			obj.processFrameCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index processFrameCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_parmaList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.parmaList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parmaList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.id = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_type(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cutscene.CommonPlayableBehaviour obj = (Cutscene.CommonPlayableBehaviour)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.type = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index type on a nil value");
		}
	}
}

