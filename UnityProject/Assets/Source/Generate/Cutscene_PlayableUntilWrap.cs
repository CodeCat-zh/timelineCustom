//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Cutscene_PlayableUntilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Cutscene.PlayableUntil), typeof(System.Object));
		L.RegFunction("GetTime", GetTime);
		L.RegFunction("GetDuration", GetDuration);
		L.RegFunction("New", _CreateCutscene_PlayableUntil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCutscene_PlayableUntil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Cutscene.PlayableUntil obj = new Cutscene.PlayableUntil();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Cutscene.PlayableUntil.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 1);
			float o = Cutscene.PlayableUntil.GetTime(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDuration(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 1);
			float o = Cutscene.PlayableUntil.GetDuration(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

