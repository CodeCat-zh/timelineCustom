//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Timeline_ClipCapsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.Timeline.ClipCaps));
		L.RegVar("None", get_None, null);
		L.RegVar("Looping", get_Looping, null);
		L.RegVar("Extrapolation", get_Extrapolation, null);
		L.RegVar("ClipIn", get_ClipIn, null);
		L.RegVar("SpeedMultiplier", get_SpeedMultiplier, null);
		L.RegVar("Blending", get_Blending, null);
		L.RegVar("AutoScale", get_AutoScale, null);
		L.RegVar("All", get_All, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.Timeline.ClipCaps>.Check = CheckType;
		StackTraits<UnityEngine.Timeline.ClipCaps>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.Timeline.ClipCaps arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.Timeline.ClipCaps), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Looping(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.Looping);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Extrapolation(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.Extrapolation);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClipIn(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.ClipIn);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SpeedMultiplier(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.SpeedMultiplier);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Blending(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.Blending);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoScale(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.AutoScale);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_All(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Timeline.ClipCaps.All);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.Timeline.ClipCaps o = (UnityEngine.Timeline.ClipCaps)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

