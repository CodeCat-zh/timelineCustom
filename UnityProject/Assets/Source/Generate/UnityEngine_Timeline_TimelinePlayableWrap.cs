//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Timeline_TimelinePlayableWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Timeline.TimelinePlayable), typeof(UnityEngine.Playables.PlayableBehaviour));
		L.RegFunction("Create", Create);
		L.RegFunction("Compile", Compile);
		L.RegFunction("PrepareFrame", PrepareFrame);
		L.RegFunction("New", _CreateUnityEngine_Timeline_TimelinePlayable);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Timeline_TimelinePlayable(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Timeline.TimelinePlayable obj = new UnityEngine.Timeline.TimelinePlayable();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Timeline.TimelinePlayable.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.Playables.PlayableGraph arg0 = StackTraits<UnityEngine.Playables.PlayableGraph>.Check(L, 1);
			System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset> arg1 = (System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset>)ToLua.CheckObject<System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset>>(L, 2);
			UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
			bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
			UnityEngine.Playables.ScriptPlayable<UnityEngine.Timeline.TimelinePlayable> o = UnityEngine.Timeline.TimelinePlayable.Create(arg0, arg1, arg2, arg3, arg4);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Compile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			UnityEngine.Timeline.TimelinePlayable obj = (UnityEngine.Timeline.TimelinePlayable)ToLua.CheckObject<UnityEngine.Timeline.TimelinePlayable>(L, 1);
			UnityEngine.Playables.PlayableGraph arg0 = StackTraits<UnityEngine.Playables.PlayableGraph>.Check(L, 2);
			UnityEngine.Playables.Playable arg1 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 3);
			System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset> arg2 = (System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset>)ToLua.CheckObject<System.Collections.Generic.IEnumerable<UnityEngine.Timeline.TrackAsset>>(L, 4);
			UnityEngine.GameObject arg3 = (UnityEngine.GameObject)ToLua.CheckObject(L, 5, typeof(UnityEngine.GameObject));
			bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
			bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
			obj.Compile(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PrepareFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Timeline.TimelinePlayable obj = (UnityEngine.Timeline.TimelinePlayable)ToLua.CheckObject<UnityEngine.Timeline.TimelinePlayable>(L, 1);
			UnityEngine.Playables.Playable arg0 = StackTraits<UnityEngine.Playables.Playable>.Check(L, 2);
			UnityEngine.Playables.FrameData arg1 = StackTraits<UnityEngine.Playables.FrameData>.Check(L, 3);
			obj.PrepareFrame(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

